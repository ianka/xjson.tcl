overview: |-
  Compose data with expr schema.
operation: compose
tests:
  - name: single variable single value
    desc: A single value may be caught by a single variable.
    schema: 'expr x {[string reverse $x]} number'
    data: '123'
    expected: 'number 321'

  - name: single variable list value
    desc: A list fed into a single variable is treated as a Tcl list.
    schema: 'expr x {[llength $x]} number'
    data: '123 456 789'
    expected: 'number 3'

  - name: multiple variables array value
    desc: A array fed into a multiple variables makes the last variable get the list of remaining values.
    schema: 'expr {x y} {[join $y $x]} string'
    data: ': 456 789'
    expected: 'string 456:789'

  - name: sandbox
    desc: Tcl code must be processed inside a sandbox.
    schema: 'expr x {[list $x [interp issafe] [info exists ::schemasandbox]]} {array number}'
    data: '123'
    expected: 'array {{number 123} {number 1} {number 1}}'

  - name: isolate option
    desc: The -isolate option must isolate the sandbox.
    schema: 'expr -isolate x {[list $x [interp issafe] [info exists ::schemasandbox]]} {array number}'
    data: '123'
    expected: 'array {{number 123} {number 1} {number 0}}'

  - name: end of options
    desc: End of options marker at the end must be ignored.
    schema: 'expr -- x {[string reverse $x]} number'
    data: '321'
    expected: 'number 123'
