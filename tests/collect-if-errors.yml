overview: |-
  Collect data with "if" schema. Error handling.
operation: collect
testerror: true
testcode:  true
tests:
  - name: unknown option
    desc: Unknown options must throw an error.
    schema: 'if -foobar {} {} {} {}'
    data: 'literal true'
    expected: 'XJSON SCHEMA UNKNOWN_OPTION'

  - name: no arguments
    desc: No arguments must throw an error.
    schema: 'if'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: one argument
    desc: Just one argument must throw an error.
    schema: 'if {}'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: two arguments
    desc: Just two argument must throw an error.
    schema: 'if {} {}'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: three arguments
    desc: Just three argument must throw an error.
    schema: 'if {} {} {}'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: too many arguments
    desc: Too many arguments must throw an error.
    schema: 'if {} {} {} {} {}'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: failed validation of then schema
    desc: Validation errors must be passed through.
    schema: 'if {number -max 4} {number -max 2} {const foo} {const bar}'
    data: 'number 3'
    expected: 'XJSON COLLECTOR OBJECT OUT_OF_RANGE'

  - name: failed validation of else schema
    desc: Validation errors must be passed through.
    schema: 'if {number -max 3} {const foo} {number -max 1} {const bar}'
    data: 'number 4'
    expected: 'XJSON COLLECTOR OBJECT OUT_OF_RANGE'

  - name: failed validation of null schema
    desc: Validation errors must be passed through.
    schema: 'if {number -max 3} {const foo} {const bar} {number -max 5}'
    data: 'literal null'
    expected: 'XJSON COLLECTOR OBJECT IS_NULL'

  - name: failed validation of test schema
    desc: Validation errors must be escalated.
    schema: 'if {number -max 2} {number -max 3} escalate {number -max 0}'
    data: 'number 3'
    expected: 'XJSON COLLECTOR OBJECT OUT_OF_RANGE'
