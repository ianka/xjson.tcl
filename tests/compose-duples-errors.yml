overview: |-
  Compose data with duples schema. Error handling.
operation: compose
testerror: true
testcode:  true
tests:
  - name: unknown option
    desc: Unknown options must throw an error.
    schema: 'duples -foobar {}'
    data: ''
    expected: 'XJSON SCHEMA UNKNOWN_OPTION'

  - name: missing null option value
    desc: Missing option value to the "-null" option must throw an error.
    schema: 'duples -null'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing test option value
    desc: Missing option value to the "-test" option must throw an error.
    schema: 'duples -test'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing max option value
    desc: Missing option value to the "-max" option must throw an error.
    schema: 'duples -max'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing xmax option value
    desc: Missing option value to the "-xmax" option must throw an error.
    schema: 'duples -xmax'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing min option value
    desc: Missing option value to the "-min" option must throw an error.
    schema: 'duples -min'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing xmin option value
    desc: Missing option value to the "-xmin" option must throw an error.
    schema: 'duples -xmin'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing multipleof option value
    desc: Missing option value to the "-multipleof" option must throw an error.
    schema: 'duples -multipleof'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: non-integer max option value
    desc: Non-integer option value to the "-max" option must throw an error.
    schema: 'duples -max 123.0 {}'
    data: ''
    expected: 'XJSON SCHEMA OPTION TYPE_MISMATCH'

  - name: non-integer xmax option value
    desc: Non-integer option value to the "-xmax" option must throw an error.
    schema: 'duples -xmax 123.0 {}'
    data: ''
    expected: 'XJSON SCHEMA OPTION TYPE_MISMATCH'

  - name: non-integer min option value
    desc: Non-integer option value to the "-min" option must throw an error.
    schema: 'duples -min 123.0 {}'
    data: ''
    expected: 'XJSON SCHEMA OPTION TYPE_MISMATCH'

  - name: non-integer xmin option value
    desc: Non-integer option value to the "-xmin" option must throw an error.
    schema: 'duples -xmin 123.0 {}'
    data: ''
    expected: 'XJSON SCHEMA OPTION TYPE_MISMATCH'

  - name: non-positive integer multipleof option value
    desc: Non-positive integer option value to the "-multipleof" option must throw an error.
    schema: 'duples -multipleof 0 {}'
    data: ''
    expected: 'XJSON SCHEMA OPTION BOUNDARY_MISMATCH'

  - name: invalid test option value
    desc: Invalid option value to the "-test" option must throw an error.
    schema: 'duples -test foobar {n number}'
    data: '{n 0} {n 1} {n 2} {n 3} {n 4} {n 5}'
    expected: 'TCL PARSE EXPR BAREWORD'

  - name: sandbox
    desc: Unsafe Tcl code inside the sandbox must throw an error.
    schema: 'duples -test {[puts bar]} {n number}'
    data: '{n 0} {n 1} {n 2} {n 3} {n 4} {n 5}'
    expected: 'TCL LOOKUP CHANNEL stdout'

  - name: end of options
    desc: Known options after end of options marker must throw an error.
    schema: 'duples -- -max 0 {}'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: invalid arguments
    desc: Invalid arguments must throw an error.
    schema: 'duples'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: invalid schema argument
    desc: invalid schema argument must throw an error.
    schema: 'duples {f foobar}'
    data: ''
    expected: 'XJSON SCHEMA UNKNOWN_METHOD'

  - name: unmatching data
    desc: unmatching data must throw an error.
    schema: 'duples {n number}'
    data: '{n true}'
    expected: 'XJSON COMPOSER OBJECT TYPE_MISMATCH'

  - name: invalid data
    desc: Invalid data must throw an error.
    schema: 'duples {n null}'
    data: '{n foobar}'
    expected: 'XJSON COMPOSER OBJECT TYPE_MISMATCH'

  - name: invalid literal
    desc: Invalid literal data must throw an error.
    schema: 'duples {n null}'
    data: '{n true}'
    expected: 'XJSON COMPOSER OBJECT TYPE_MISMATCH'

  - name: duples empty schema null data
    desc: Null elements have to be emitted.
    schema: 'duples -null {} {}'
    data: ''
    expected: 'XJSON COMPOSER OBJECT IS_NULL'

  - name: test option
    desc: Value that fails "-test" option must throw an error.
    schema: 'duples -test {$x < 0} {}'
    data: '{}'
    expected: 'XJSON COMPOSER OBJECT TEST_FAILED'

  - name: max option
    desc: Value that fails "-max" option must throw an error.
    schema: 'duples -max 5 {n number}'
    data: '{n 0} {n 1} {n 2} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: xmax option
    desc: Value that fails "-xmax" option must throw an error.
    schema: 'duples -xmax 6 {n number}'
    data: '{n 0} {n 1} {n 2} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: min option
    desc: Value that fails "-min" option must throw an error.
    schema: 'duples -min 7 {n number}'
    data: '{n 0} {n 1} {n 2} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: min option null data
    desc: Null elements have to be ignored.
    schema: 'duples -min 7 {n {number -null {}}}'
    data: '{n 0} {n 1} {n 2} {} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: min option marked null data
    desc: Null elements have to be ignored.
    schema: 'duples -min 7 {n {number -null {}}}'
    data: '{n 0} {n 1} {n 2} {n {}} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: min option emitted null data
    desc: Null elements have to be emitted, yet not counted.
    schema: 'duples -min 7 {n {optional -emitnull {number -null {}}}}'
    data: '{n 0} {n 1} {n 2} {n {}} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: xmin option
    desc: Value that fails "-xmin" option must throw an error.
    schema: 'duples -xmin 6 {n number}'
    data: '{n 0} {n 1} {n 2} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: xmin option null data
    desc: Null elements have to be ignored.
    schema: 'duples -xmin 6 {n {number -null {}}}'
    data: '{n 0} {n 1} {n 2} {} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: xmin option marked null data
    desc: Null elements have to be ignored.
    schema: 'duples -xmin 6 {n {number -null {}}}'
    data: '{n 0} {n 1} {n 2} {n {}} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: xmin option emitted null data
    desc: Null elements have to be emitted, yet not counted.
    schema: 'duples -xmin 6 {n {optional -emitnull {number -null {}}}}'
    data: '{n 0} {n 1} {n 2} {n {}} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: multipleof option
    desc: Value that fails "-multipleof" option must throw an error.
    schema: 'duples -multipleof 4 {n number}'
    data: '{n 0} {n 1} {n 2} {n 3} {n 4} {n 5}'
    expected: 'XJSON COMPOSER OBJECT NOT_A_MULTIPLE'

  - name: null precedence
    desc: Null handling must take precedence over value handling.
    schema: 'duples -null {{n 1} {n 2} {n 3}} {n number}'
    data: '{n 1} {n 2} {n 3}'
    expected: 'XJSON COMPOSER OBJECT IS_NULL'

  - name: incomplete tuple
    desc: Incomplete duples must throw an error.
    schema: 'duples {n number s string b boolean}'
    data: '{n 123 s foo b true} {n 456 s bar}'
    expected: 'XJSON COMPOSER OBJECT INCOMPLETE_TUPLE'

  - name: ambiguous field
    desc: Ambiguous duples must throw an error.
    schema: 'duples {n number s string b boolean}'
    data: '{n 123 s foo b true} {n 456 b false s bar b true}'
    expected: 'XJSON COMPOSER OBJECT AMBIGUOUS_FIELD'
