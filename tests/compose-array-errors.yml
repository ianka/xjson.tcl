overview: |-
  Compose data with array schema. Error handling.
operation: compose
testerror: true
testcode:  true
tests:
  - name: unknown option
    desc: Unknown options must throw an error.
    schema: 'array -foobar {}'
    data: ''
    expected: 'XJSON SCHEMA UNKNOWN_OPTION'

  - name: missing null option value
    desc: Missing option value to the "-null" option must throw an error.
    schema: 'array -null'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing test option value
    desc: Missing option value to the "-test" option must throw an error.
    schema: 'array -test'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing max option value
    desc: Missing option value to the "-max" option must throw an error.
    schema: 'array -max'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing xmax option value
    desc: Missing option value to the "-xmax" option must throw an error.
    schema: 'array -xmax'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing min option value
    desc: Missing option value to the "-min" option must throw an error.
    schema: 'array -min'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing xmin option value
    desc: Missing option value to the "-xmin" option must throw an error.
    schema: 'array -xmin'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing multipleof option value
    desc: Missing option value to the "-multipleof" option must throw an error.
    schema: 'array -multipleof'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: non-integer max option value
    desc: Non-integer option value to the "-max" option must throw an error.
    schema: 'array -max 123.0 {}'
    data: ''
    expected: 'XJSON SCHEMA OPTION TYPE_MISMATCH'

  - name: non-integer xmax option value
    desc: Non-integer option value to the "-xmax" option must throw an error.
    schema: 'array -xmax 123.0 {}'
    data: ''
    expected: 'XJSON SCHEMA OPTION TYPE_MISMATCH'

  - name: non-integer min option value
    desc: Non-integer option value to the "-min" option must throw an error.
    schema: 'array -min 123.0 {}'
    data: ''
    expected: 'XJSON SCHEMA OPTION TYPE_MISMATCH'

  - name: non-integer xmin option value
    desc: Non-integer option value to the "-xmin" option must throw an error.
    schema: 'array -xmin 123.0 {}'
    data: ''
    expected: 'XJSON SCHEMA OPTION TYPE_MISMATCH'

  - name: non-positive integer multipleof option value
    desc: Non-positive integer option value to the "-multipleof" option must throw an error.
    schema: 'array -multipleof 0 {}'
    data: ''
    expected: 'XJSON SCHEMA OPTION BOUNDARY_MISMATCH'

  - name: invalid test option value
    desc: Invalid option value to the "-test" option must throw an error.
    schema: 'array -test foobar number'
    data: '0 1 2 3 4 5'
    expected: 'TCL PARSE EXPR BAREWORD'

  - name: sandbox
    desc: Unsafe Tcl code inside the sandbox must throw an error.
    schema: 'array -test {[puts bar]} number'
    data: '0 1 2 3 4 5'
    expected: 'TCL LOOKUP CHANNEL stdout'

  - name: end of options
    desc: Known options after end of options marker must throw an error.
    schema: 'array -- -max 0 {}'
    data: ''
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: missing arguments
    desc: Missing arguments must throw an error.
    schema: 'array'
    data: 'array {}'
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: too many arguments
    desc: Too many arguments must throw an error.
    schema: 'array {} {}'
    data: 'array {}'
    expected: 'XJSON SCHEMA WRONGARGS'

  - name: invalid schema argument
    desc: invalid schema argument must throw an error.
    schema: 'array foobar'
    data: ''
    expected: 'XJSON SCHEMA UNKNOWN_METHOD'

  - name: unmatching data
    desc: unmatching data must throw an error.
    schema: 'array number'
    data: 'true'
    expected: 'XJSON COMPOSER OBJECT TYPE_MISMATCH'

  - name: invalid data
    desc: Invalid data must throw an error.
    schema: 'array {}'
    data: 'foobar'
    expected: 'XJSON COMPOSER OBJECT TYPE_MISMATCH'

  - name: invalid literal
    desc: Invalid literal data must throw an error.
    schema: 'array {}'
    data: 'true'
    expected: 'XJSON COMPOSER OBJECT TYPE_MISMATCH'

  - name: array empty schema null data
    desc: Null elements have to be emitted.
    schema: 'array -null {} {}'
    data: ''
    expected: 'XJSON COMPOSER OBJECT IS_NULL'

  - name: array null schema null data
    desc: Null elements have to be emitted.
    schema: 'array -null {} null'
    data: ''
    expected: 'XJSON COMPOSER OBJECT IS_NULL'

  - name: test option
    desc: Value that fails "-test" option must throw an error.
    schema: 'array -test {$x < 0} {}'
    data: ''
    expected: 'XJSON COMPOSER OBJECT TEST_FAILED'

  - name: max option
    desc: Value that fails "-max" option must throw an error.
    schema: 'array -max 5 number'
    data: '0 1 2 3 4 5'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: xmax option
    desc: Value that fails "-xmax" option must throw an error.
    schema: 'array -xmax 6 number'
    data: '0 1 2 3 4 5'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: min option
    desc: Value that fails "-min" option must throw an error.
    schema: 'array -min 7 number'
    data: '0 1 2 3 4 5'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: min option null data
    desc: Null elements have to be ignored.
    schema: 'array -min 7 {number -null {}}'
    data: '0 1 2 {} 3 4 5'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: min option emitted null data
    desc: Null elements have to be emitted, yet not counted.
    schema: 'array -min 7 {optional -emitnull {number -null {}}}'
    data: '0 1 2 {} 3 4 5'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: xmin option
    desc: Value that fails "-xmin" option must throw an error.
    schema: 'array -xmin 6 number'
    data: '0 1 2 3 4 5'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: xmin option null data
    desc: Null elements have to be ignored.
    schema: 'array -xmin 6 {number -null {}}'
    data: '0 1 2 {} 3 4 5'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: xmin option emitted null data
    desc: Null elements have to be emitted, yet not counted.
    schema: 'array -xmin 6 {optional -emitnull {number -null {}}}'
    data: '0 1 2 {} 3 4 5'
    expected: 'XJSON COMPOSER OBJECT OUT_OF_RANGE'

  - name: multipleof option
    desc: Value that fails "-multipleof" option must throw an error.
    schema: 'array -multipleof 4 number'
    data: '0 1 2 3 4 5'
    expected: 'XJSON COMPOSER OBJECT NOT_A_MULTIPLE'

  - name: null precedence
    desc: Null handling must take precedence over value handling.
    schema: 'array -null {1 2 3} number'
    data: '1 2 3'
    expected: 'XJSON COMPOSER OBJECT IS_NULL'
